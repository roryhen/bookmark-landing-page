---
import '@fontsource/rubik'
import '@fontsource/rubik/400.css'
import '@fontsource/rubik/500.css'
import 'open-props/postcss/style'

import NavBar from '../components/NavBar.astro'
import Footer from '../components/Footer.astro'
import global from '$content/global.json'

export type Props = {
  title?: string
}

let { title } = Astro.props
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon-32x32.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title ? title : global.site_name}</title>
  </head>
  <body>
    <NavBar />
    <slot />
    <Footer />

    <script>
      import { scrollAnimate } from '../scripts/animations'
      scrollAnimate()
    </script>
  </body>
</html>
<style is:global>
  html {
    --accent-1: hsl(231 69% 60%);
    --accent-2: hsl(0 94% 66%);
    --text-1: hsl(229 31% 21%);
    --text-1-hsl: 229 31% 21%;
    --text-2: hsl(229 8% 48%);
    --text-3: hsl(229 8% 34%);

    --surface-0: white;
    --surface-1: hsl(229 15% 95%);
    --surface-2: hsl(231 9% 88%);
    --shadow-color: 231 80% 15%;

    --size-desktop: 1280px;
  }

  @media (--OSdark) {
    html {
      --text-1: hsl(229 95% 75%);
      --text-2: hsl(231 15% 80%);
      --text-3: hsl(231 70% 90%);

      --surface-1: hsl(229 10% 20%);
      --surface-2: hsl(231 15% 28%);
      --shadow-color: 231 40% 10%;
    }
  }

  * {
    box-sizing: border-box;
  }

  html {
    font-family: Rubik, var(--font-sans);
    background-color: var(--surface-1);
    scroll-behavior: smooth;
  }

  body {
    margin: 0;

    @media (--md-n-above) {
      font-size: 1.125rem;
    }
  }

  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }

  button,
  input {
    font: inherit;
  }

  button {
    border: 0;
    background-color: transparent;
  }

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
  }

  h1,
  h2,
  h3,
  h4,
  p {
    margin: 0;
  }

  a {
    text-decoration: none;
  }

  p {
    color: var(--text-2);
    line-height: var(--font-lineheight-4);
  }

  h1,
  h2,
  h3,
  h4 {
    color: var(--text-1);
    font-weight: var(--font-weight-5);
  }

  h1 {
    font-size: var(--font-size-5);

    @media (--md-n-above) {
      font-size: var(--font-size-7);
    }
  }

  h2 {
    font-size: var(--font-size-4);

    @media (--md-n-above) {
      font-size: var(--font-size-5);
    }
  }

  h3 {
    font-size: var(--font-size-3);
  }

  @media (--lg-n-above) {
    .desktop-layout {
      display: grid;
      grid-template-columns: minmax(0, var(--size-desktop));
      justify-content: center;
    }
  }

  .section-padding {
    padding: var(--size-8) var(--size-5);
  }

  .link {
    color: var(--text-3);
    text-transform: uppercase;
    letter-spacing: var(--font-letterspacing-4);

    &:not(.button):hover {
      color: var(--accent-2);
    }
  }

  .button {
    --button-color: var(--accent-1);
    display: inline-block;
    background: var(--button-color);
    color: var(--surface-0);
    border-radius: var(--radius-2);
    padding: 0.875rem var(--size-4);
    box-shadow: var(--shadow-4);
    font-size: 0.875rem;
    font-weight: 500;

    @media (--OSdark) {
      color: var(--surface-0);
    }

    &:hover,
    &:active {
      background: var(--surface-0);
      box-shadow: inset 0 0 0 2px var(--button-color), var(--shadow-4);
      color: var(--button-color);
    }
  }

  .invert {
    color: var(--button-color);
    background: var(--surface-2);

    @media (--OSdark) {
      color: var(--text-3);

      &:hover {
        --button-color: var(--surface-2);
      }
    }
  }
</style>
